#include <stdlib.h>/* dummy stubs */struct pthread_mutex_t_struct {  int id;  int locked;};typedef struct pthread_mutex_t_struct *pthread_mutex_t;struct pthread_mutexattr_struct{  void *dummy;};typedef struct pthread_mutexattr_struct *pthread_mutexattr;extern int pthread_mutex_init(pthread_mutex_t *m, const pthread_mutexattr *a);extern int pthread_mutex_lock(pthread_mutex_t *m);extern int pthread_mutex_unlock(pthread_mutex_t *m);extern void *pthread_mutex_initializer();/*#define PTHREAD_MUTEX_INITIALIZER pthread_mutex_initializer()*/#define PTHREAD_MUTEX_INITIALIZER NULL